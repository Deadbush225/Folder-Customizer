# Maintainer: {{APP_MAINTAINER}}
pkgname={{APP_PACKAGE}}
pkgver={{VERSION}}
pkgrel=1
pkgdesc="{{APP_DESCRIPTION}}"
arch=('x86_64')
url="{{APP_URL}}"
license=('{{APP_LICENSE}}')
depends=('qt6-base')
source=("{{APP_PACKAGE}}-{{VERSION}}.tar.gz")
sha256sums=('SKIP')

package() {
    # Install binary (do not copy libraries for Arch)
    install -dm755 "$pkgdir/usr/lib/$pkgname"
    # Files are provided in the extracted source located in $srcdir
    # Install all files from bin directory
    if [ -d "$srcdir/bin" ]; then
        cp -a "$srcdir/bin/." "$pkgdir/usr/lib/$pkgname/bin/"
    fi
    # Copy manifest.json if available in source
    if [ -f "$srcdir/manifest.json" ]; then
        cp "$srcdir/manifest.json" "$pkgdir/usr/lib/$pkgname/"
    fi

    # Copy post-install.sh for post_install() function to use
    if [ -f "$srcdir/post-install.sh" ]; then
        cp "$srcdir/post-install.sh" "$pkgdir/usr/lib/$pkgname/post-install.sh"
        chmod +x "$pkgdir/usr/lib/$pkgname/post-install.sh"
    fi

    # Install icon folder if present
    if [ -d "$srcdir/icons" ]; then
        cp -a "$srcdir/icons/." "$pkgdir/usr/lib/$pkgname/icons/"
    fi


    # Do NOT copy $INSTALL_DIR/lib or any .so files for Arch
    
    # Create wrapper script
    install -dm755 "$pkgdir/usr/bin"
    cat > "$pkgdir/usr/bin/$pkgname" << 'EOFSCRIPT'
#!/bin/bash
exec "/usr/lib/{{APP_PACKAGE}}/bin/{{APP_BINARY}}" "\$@"
EOFSCRIPT
    chmod +x "$pkgdir/usr/bin/$pkgname"
    
    # Desktop file
    install -dm755 "$pkgdir/usr/share/applications"
    cat > "$pkgdir/usr/share/applications/$pkgname.desktop" << 'EOFDESKTOP'
[Desktop Entry]
Name={{APP_NAME}}
Comment={{APP_DESCRIPTION}}
Exec={{APP_PACKAGE}}
Icon=/usr/lib/{{APP_PACKAGE}}/icons/{{APP_PACKAGE}}.png
Type=Application
Categories={{APP_CATEGORIES}}
EOFDESKTOP
}

post_install() {
    # Run post-install.sh if it exists
    if [ -f "/usr/lib/{{APP_PACKAGE}}/post-install.sh" ]; then
        echo "Running post-installation customization..."
        bash "/usr/lib/{{APP_PACKAGE}}/post-install.sh" "/usr" "{{APP_PACKAGE}}" "{{APP_NAME}}" || true
    fi
    
    # Update desktop database
    if command -v update-desktop-database >/dev/null 2>&1; then
        update-desktop-database /usr/share/applications 2>/dev/null || true
    fi
    
    # Update icon cache
    if command -v gtk-update-icon-cache >/dev/null 2>&1; then
        gtk-update-icon-cache -t /usr/share/icons/hicolor 2>/dev/null || true
    fi
}
